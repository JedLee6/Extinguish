# This is a basic workflow to help you get started with Actions

name: Build release apk and app bundle

# Controls when the workflow will run
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Retrieve the secret and decode it to a file
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo $KEYSTORE_BASE64 | base64 --decode > extinguish.jks
          echo "KEY_STORE_FILE=${{ github.workspace }}/extinguish.jks" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Setup android build tools
        run: |
          sudo apt-get install -y curl unzip
          curl https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o commandline-tools.zip
          unzip commandline-tools.zip
          mv cmdline-tools ./.android/sdk/cmdline-tools
          echo "ANDROID_SDK=${{ github.workspace }}/.android/sdk" >> "$GITHUB_ENV"
          echo "$ANDROID_SDK/cmdline-tools/bin" >> $GITHUB_PATH
          yes | sdkmanager --licenses --sdk_root=$ANDROID_SDK
          sdkmanager --install "build-tools;35.0.0"
          echo "$ANDROID_SDK/build-tools/35.0.0/bin" >> $GITHUB_PATH

      - name: Check apksigner
        run: apksigner --help

      - name: Build unsigned apk and app bundle
        run: |
          chmod +x gradlew
          ./gradlew :app:assembleUnsignedRelease
          ./gradlew :app:bundleUnsignedRelease

      - name: Signing apk
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASS: ${{ secrets.KEY_PASS }}
          UNSIGNED_APP_NAME: app-unsigned-release-unsigned.apk
          ALIGN_APP_NAME: app-release-aligned.apk
          SIGNED_APP_NAME: app-release.apk
        working-directory: app/build/outputs/apk/unsigned/release
        run: |
          zipalign -v -p 4 $UNSIGNED_APP_NAME $ALIGN_APP_NAME
          apksigner sign --ks $KEY_STORE_FILE --ks-key-alias $KEY_ALIAS --ks-pass pass:$KEYSTORE_PASS --key-pass pass:$KEY_PASS --out $SIGNED_APP_NAME $ALIGN_APP_NAME
          apksigner verify -v "$apk_path/app-release.apk"

      - name: Signing app bundle
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASS: ${{ secrets.KEY_PASS }}
          UNSIGNED_APP_NAME: app-unsigned-release.aab
          SIGNED_APP_NAME: app-release.aab
        working-directory: app/build/outputs/bundle/unsignedRelease
        run: |
          jarsigner -keystore $KEY_STORE_FILE -storepass $KEYSTORE_PASS -keypass $KEY_PASS app-release.aab $KEY_ALIAS
          mv $UNSIGNED_APP_NAME $SIGNED_APP_NAME


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            app/build/outputs/apk/unsigned/release/app-release.apk
            app/build/outputs/bundle/unsignedRelease/app-release.aab
